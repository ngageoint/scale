---
# build-scale/tasks/main.yml
- name: Install python build libraries
  tags: [ init-examples, example-database ]
  pip: requirements='{{ scale_build_root }}/scale/pip/build_linux.txt'
  become: true

- name: Install unzip
  tags: [ init-examples, example-database ]
  yum: name=unzip
  become: true

- name: Install postgresql client and libs
  tags: [ init-examples, example-database ]
  yum: name=postgresql
  become: true

- name: Install gdal python
  tags: [ init-examples, example-database ]
  yum: name=gdal-python
  become: true

- name: Install psycopg2
  tags: [ init-examples, example-database ]
  yum: name=python-psycopg2
  become: true

- name: Install geos
  tags: [ init-examples, example-database ]
  yum: name=geos
  become: true

- name: Install subversion libs
  tags: [ init-examples, example-database ]
  yum: name=subversion-libs
  become: true

- name: Install protobuf
  tags: [ init-examples, example-database ]
  yum: name=protobuf
  become: true

- name: Create scale folder
  tags: [ build-scale, build-scale-sync ]
  file: path='{{ scale_build_root }}' state=directory mode=755
  become: true

- name: Install scale
  tags: [ build-scale, build-scale-sync ]
  synchronize: src="{{ playbook_dir }}/.." dest='{{ scale_build_root }}' delete=yes
  become: true

- name: Install local_settings.py
  tags: [ build-scale, build-scale-minimal ]
  template: src=local_settings.py.j2 dest='{{ scale_build_root }}/scale/scale/local_settings.py'

- name: Build scale docker image
  tags: [ build-scale, build-scale-docker ]
  docker_image:
    path: "{{ scale_build_root }}"
    name: "geoint/scale"
    tag: "{{ scale_docker_version }}"
    state: build
  become: true
  notify:
    - push scale

- name: Build scale-web docker image
  tags: [ build-scale, build-scale-docker ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/framework/scale-web"
    name: "geoint/scale-web"
    tag: "{{ scale_docker_version }}"
    state: build
  become: true
  notify:
    - push scale-web

- name: Build scale-web-static docker image
  tags: [ build-scale, build-scale-docker ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/framework/scale-web-static"
    name: "geoint/scale-web-static"
    tag: "{{ scale_docker_version }}"
    state: build
  become: true
  notify:
    - push scale-web-static
