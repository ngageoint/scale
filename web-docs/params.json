{"name":"Scale","tagline":"containerized processing framework for algorithms focused on remote sensing","body":"Scale\r\n=====\r\nScale is a system that provides management of automated processing on a cluster of machines. It allows\r\nusers to define jobs, which can be any type of script or algorithm. These jobs run on ingested source\r\ndata and produce product files. The produced products can be disseminated to appropriate users and/or\r\nused to evaluate the producing algorithm in terms of performance and accuracy.\r\n\r\nMesos and Nodes \r\n---------------\r\nScale runs across a cluster of networked machines (called nodes) that process the jobs. Scale utilizes\r\nApache Mesos, a free and open source project, for managing the available resources on the nodes. Mesos\r\ninforms Scale of available computing resources and Scale schedules jobs to run on those resources.\r\n\r\nIngest \r\n------\r\nScale ingests source files using a Scale component called Strike. Strike is a process that monitors an\r\ningest directory into which source data files are being copied. After a new source data file has been\r\ningested, Scale produces and places jobs on the queue depending on the type of the ingested file.\r\nMany Strike processes can be run simultaneously, allowing Scale to monitor many different ingest directories.\r\n\r\nJobs \r\n----\r\nScale creates jobs based on its known job types. A job type defines key characteristics about an algorithm\r\nthat Scale needs to know in order to run it (what command to run, the algorithm.s inputs and outputs, etc.)\r\nJob types are labeled with versions, allowing Scale to run multiple versions of the same algorithm. Jobs may\r\nbe created automatically due to an event, such as the ingest of a particular type of source data file, or\r\nthey may be created manually by a user. Jobs that need to be executed are placed onto and prioritized within\r\na queue before being scheduled onto an available node. When multiple jobs need to be run in a serial or parallel\r\nsequence, a recipe can be created that defines the job workflow.\r\n\r\nProducts \r\n--------\r\nJobs can produce products as a result of their successful execution. Products may be disseminated to users\r\nor used to analyze and improve the algorithms that produced them. Scale allows the creation of different\r\nworkspaces. A workspace defines a separate location for storing source or product files. When a job is created,\r\nit is given a workspace to use for storing its results, allowing a user to control whether the job.s results\r\nare available to a wider audience or are restricted to a private workspace for the user's own use.\r\n\r\nQuick Start\r\n===========\r\nWe've provided a vagrant and ansible setup to get you going quickly. Make sure vagrant, virtualbox, and ansible are installed then.\r\n```\r\ncd vagrant\r\nvagrant up\r\n```\r\nThis will download a centos7 base image and start 2 virtual machines, a master and a slave. You can add additional slaves by editing `Vagrantfile` and adding them to the `HOSTS` and `mesos-slaves` sections before doing the `vagrant up`. Ansible will be used to push the configuration out and can take a while to run. You make need to modify `ansible/group_vars/all` or `ansible/vagrant.yml` if you need to specify a local docker index, etc.\r\n\r\nResources\r\n=========\r\nCheck out the [source code](https://github.com/ngageoint/scale) for more information on developing and deploying scale.\r\nIf you've got a question you can check out our [online chat](https://chat.notcows.com/#narrow/stream/scale).\r\n[Online documentation](docs) is also available for the current develop branch.\r\n\r\nContributing\r\n============\r\nScale was developed at the National Geospatial-Intelligence Agency (NGA) in collaboration with [Ball Aerospace](http://www.ballaerospace.com/) and [Applied Information Sciences (AIS)](http://www.appliedis.com/). The government has \"unlimited rights\" and is releasing this software to increase the impact of government investments by providing developers with the opportunity to take things in new directions. The software use, modification, and distribution rights are stipulated within the Apache 2.0 license.\r\n\r\nAll pull request contributions to this project will be released under the Apache 2.0 or compatible license. Software source code previously released under an open source license and then modified by NGA staff is considered a \"joint work\" (see 17 USC ยง 101); it is partially copyrighted, partially public domain, and as a whole is protected by the copyrights of the non-government authors and must be released according to the terms of the original open source license.","google":"UA-3479806-6","note":"Don't delete this file! It's used internally to help with page regeneration."}
