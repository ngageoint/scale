openapi: "3.0.0"
info:
  title: Scale File Services
  version: v6
paths:
  /ingests:
    get:
      operationId: _rest_v6_scale_file_list
      summary: Scale File List
      description: Returns a list of all scale files
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page of the results to return. Defaults to 1.
        - in: query
          name: page_size
          schema:
            type: integer
          description: The size of the page to use for pagination of results.
            Defaults to 100, and can be anywhere from 1-1000.
        - in: query
          name: data_started
          schema:
            type: string
            format: date-time
          description: The start of the data time range to query
        - in: query
          name: data_ended
          schema:
            type: string
            format: date-time
          description: End of the data time range to query, defaults to the current time
        - in: query
          name: source_started
          schema:
            type: string
            format: date-time
          description: The start of the source time range to query
        - in: query
          name: source_ended
          schema:
            type: string
            format: date-time
          description: End of the source time range to query, defaults to the current time
        - in: query
          name: source_sensor_class
          schema:
            type: string
          description: Return only files for the given source sensor class.
            Duplicate it to filter by multiple values.
        - in: query
          name: source_sensor
          schema:
            type: string
          description: Return only files for the given source sensor.
            Duplicate it to filter by multiple values.
        - in: query
          name: source_collection
          schema:
            type: string
          description: Return only files for the given source collection.
            Duplicate it to filter by multiple values.
        - in: query
          name: source_task
          schema:
            type: string
          description: Return only files for the given source task.
            Duplicate it to filter by multiple values.
        - in: query
          name: job_output
          schema:
            type: string
          description: Return only files for the given source task.
            Duplicate it to filter by multiple values.
        - in: query
          name: modified_started
          schema:
            type: string
            format: date-time
          description: The start of the last modified time range to query
        - in: query
          name: modified_ended
          schema:
            type: string
            format: date-time
          description: End of the last modified time range to query, defaults to the current time
        - in: query
          name: order
          schema:
            type: string
          description: "One or more fields to use when ordering the results.
                        Duplicate it to multi-sort, (ex: order=host_name&order=created)
                        Nested objects require a delimiter (ex: order=source_file__created)
                        Prefix fields with a dash to reverse the sort, (ex: order=-created)"
        - in: query
          name: job_output
          schema:
            type: string
          description: Return only files for the given job output.
            Duplicate it to filter by multiple values.
        - in: query
          name: job_type_id
          schema:
            type: integer
          description: Return only files associated with a given job type identifier.
            Duplicate it to filter by multiple values.
        - in: query
          name: job_type_name
          schema:
            type: string
          description: Return only files with a given job type name. Duplicate it
            to filter by multiple values.
        - in: query
          name: job_id
          schema:
            type: integer
          description: Return only files produced by the given job identifier.
            Duplicate it to filter by multiple values.
        - in: query
          name: recipe_id
          schema:
            type: integer
          description: Return only files associated with a given recipe identifier.
            Duplicate it to filter by multiple values.
        - in: query
          name: recipe_node
          schema:
            type: string
          description: Return only files produced by the given recipe node.
            Duplicate it to filter by multiple values.
        - in: query
          name: recipe_type_id
          schema:
            type: integer
          description: Return only files associated with a given recipe type identifier.
            Duplicate it to filter by multiple values.
        - in: query
          name: batch_id
          schema:
            type: integer
          description: Return only files associated with a given batch identifier.
            Duplicate it to filter by multiple values.
        - in: query
          name: file_name
          schema:
            type: string
          description: Return only files with a given file name.
            Duplicate it to filter by multiple values.
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_list'
  /files/{id}/:
    get:
      operationId: _rest_v6_file_details
      summary: File Details
      description: Returns a specific file and all its related model information
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: id of an existing scale file
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_details'
  /files/purge-source/:
    post:
      operationId: _rest_v6_purge_source
      summary: Purge Source File
      description: Removes all records related to the given source file. This includes records for the
       following models - FileAncestryLink, Ingest, Job, JobExecution, JobExecutionEnd, 
       JobExecutionOutput, JobInputFile, Queue, Recipe, RecipeInputFile, RecipeNode, ScaleFile, and 
       TaskUpdate. **This will also delete any product files from their respective workspace.**
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Purge File Request
              type: object
              properties:
                file_id:
                  type: integer
                  description: The file id of the ScaleFile SOURCE file to purge.
                  example: 123
      responses:
        '204':
          description: 204 no content - The message was recieved and the purge process has started.
        '400':
          description: 400 bad request - There was an issue with the request, see error details for relevant details.

components:
  schemas:
    file_list:
      title: File List
      type: object
      properties:
        count:
          type: integer
          description: The total number of results that match the query parameters
          example: 10
        next:
          type: string
          format: uri
          description: A URL to the next page of results.
          example: null
        previous:
          type: string
          format: uri
          description: A URL to the previous page of results.
          example: null
        results:
          type: array
          items:
            $ref: '#/components/schemas/file'
          description: List of ingest objects

    file:
      title: File
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call
          example: 4
        workspace:
          $ref: './workspace.yml#/components/schemas/workspace_base'
        file_name:
          type: string
          description: The name of the source file.
          example: my_file.kml
        file_path:
          type: string
          description: The relative path of the file in the workspace.
          example: path/to/the/file.png
        media_type:
          type: string
          description: The IANA media type of the source file.
          example: application/vnd.google-earth.kml+xml
        file_size:
          type: integer
          description: The size of the file in bytes.
          example: 1234
        data_type_tags:
          type: array
          style: simple
          items:
            type: string
          description: A list of string data type "tags" for the file.
        is_deleted:
          type: boolean
          description: Whether the source file has been deleted.
          example: True
        url:
          type: string
          format: uri
          description: The absolute URL to use for downloading the file.
          example: http://host.com/file/path/my_file.kml
        created:
          type: string
          format: date-time
          description: When the associated database model was initially created.
          example: 2015-09-10T15:24:53.503Z
        deleted:
          type: string
          format: date-time
          description: When the source file was deleted.
          example: 2015-09-10T15:24:53.987Z
        data_started:
          type: string
          format: date-time
          description: The start time of the source data being ingested.
          example: 2015-09-10T15:24:53.503Z
        data_ended:
          type: string
          format: date-time
          description: The ended time of the source data being ingested.
          example: 2015-09-10T15:24:53.987Z
        geometry:
          type: string
          description: The full geospatial geometry footprint of the source file. (WKT format)
          example: POLYGON((11 -11,22 -22,33 -33,44 -44))
        center_point:
          type: string
          description: The central geospatial location of the source file.
          example: POINT(11 -11)
        countries:
          type: array
          style: simple
          items:
            type: string
          description: A list of zero or more strings with the ISO3 country codes for countries
            contained in the geographic boundary of this file.
        last_modified:
          type: string
          format: date-time
          description: When the associated database model was last saved.
          example: 2015-09-10T15:24:53.987Z
        source_started:
          type: string
          format: date-time
          description: When collection of the underlying source file started.
          example: 2015-09-10T15:24:53.987Z
        source_ended:
          type: string
          format: date-time
          description: When collection of the underlying source file ended.
          example: 2015-09-10T15:24:53.987Z
        source_sensor_class:
          type: string
          description: The class of sensor used to produce the source file
          example: ABC
        source_sensor:
          type: string
          description: The specific identifier of the sensor used to produce the source file
          example: 1
        source_collection:
          type: string
          description: The collection of the source file
          example: 113394955
        source_task:
          type: string
          description: The task that produced the source file.
          example: my-task
        job:
          $ref: './job.yml#/components/schemas/job'
        job_exe:
          $ref: './job.yml#/components/schemas/job_exe'
          example: 2015-09-10T15:24:53.987Z
        job_output:
          type: string
          description: The name of the output from the job related to this file.
          example: output_name_1
        job_type:
          $ref: './job_type.yml#/components/schemas/job_type'
        recipe:
          $ref: './recipe.yml#/components/schemas/recipe'
        recipe_node:
          type: string
          description: The recipe node that produced this file.
          example: kml-footprint
        recipe_type:
          $ref: './recipe_type.yml#/components/schemas/recipe_type'
        batch:
          $ref: './batch.yml#/components/schemas/batch'
        is_superseded:
          type: boolean
          description: Whether this file has been replaced and is now obsolete.
          example: True
        superseded:
          type: string
          format: date-time
          description: When the file became superseded by another file.
          example: 2015-09-10T15:24:53.987Z
      required:
      - id

    file_details:
      allOf:
        - ref: '#/components/schemas/file'
        - title: File Details
        - type: object
          properties:
            meta_data:
              $ref: '#/components/schemas/metadata'

    metadata:
      title: Metadata
      type: object
      additionalProperties:
        oneOf:
        - $ref: '#/definitions/Geometry'
        - $ref: '#/definitions/Point2D'
        - $ref: '#/definitions/Point'
        - $ref: '#/definitions/LineString'
        - $ref: '#/definitions/Polygon'
        - $ref: '#/definitions/MultiPoint'
        - $ref: '#/definitions/LineString'
        - $ref: '#/definitions/MultiLineString'
        - $ref: '#/definitions/MultiPolygon'
        - $ref: '#/definitions/GeometryCollection'
        - $ref: '#/definitions/Feature'
        - $ref: '#/definitions/FeatureCollection'
        discriminator:
          propertyName: type
          mapping:
            Geometry: '#/definitions/Geometry'
            Point2D: '#/definitions/Point2D'
            Point: '#/definitions/Point'
            LineString: '#/definitions/LineString'
            Polygon: '#/definitions/Polygon'
            MultiPoint: '#/definitions/MultiPoint'
            LineString: '#/definitions/LineString'
            MultiLineString: '#/definitions/MultiLineString'
            MultiPolygon: '#/definitions/MultiPolygon'
            GeometryCollection: '#/definitions/GeometryCollection'
            Feature: '#/definitions/Feature'
            FeatureCollection: '#/definitions/FeatureCollection'

definitions:
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string

  Geometry:
    type: object
    description: GeoJSon geometry
    discriminator: type
    required:
      - type
    externalDocs:
      url: http://geojson.org/geojson-spec.html#geometry-objects
    properties:
      type:
        type: string
        enum:
        - Point
        - LineString
        - Polygon
        - MultiPoint
        - MultiLineString
        - MultiPolygon
        description: the geometry type
      bbox:
        type: array
        minItems: 4
        maxItems: 4
        items:
          type: number

  Point2D:
    type: array
    maxItems: 2
    minItems: 2
    items:
      type: number

  Point:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id2
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            $ref: '#/definitions/Point2D'

  LineString:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id3
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              $ref: '#/definitions/Point2D'

  Polygon:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id4
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            minItems: 4
            items:
              type: array
              items:
                $ref: '#/definitions/Point2D'

  MultiPoint:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id5
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              $ref: '#/definitions/Point2D'

  MultiLineString:
    type: object
    description:GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id6
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                $ref: '#/definitions/Point2D'

  MultiPolygon:
    type: object
    description:GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id6
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  $ref: '#/definitions/Point2D'

  GeometryCollection:
    type: object
    description:GeoJSon geometry collection
    required:
     - type
     - geometries
    externalDocs:
      url: http://geojson.org/geojson-spec.html#geometrycollection
    properties:
      type:
        type: string
        enum:
        - GeometryCollection
        description:
      geometries:
        type: array
        items:
          $ref: '#/definitions/Geometry'

  Feature:
    type: object
    description:GeoJSon Feature
    required:
     - type
     - properties
     - geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#geometrycollection
    properties:
      type:
        type: string
        enum:
        - Feature
        description:
      properties:
        type: object
        additionalProperties: true
        nullable: true
      geometry:
        oneOf:
        - $ref: '#/definitions/Geometry'
        - $ref: '#/definitions/Point2D'
        - $ref: '#/definitions/Point'
        - $ref: '#/definitions/LineString'
        - $ref: '#/definitions/Polygon'
        - $ref: '#/definitions/MultiPoint'
        - $ref: '#/definitions/LineString'
        - $ref: '#/definitions/MultiLineString'
        - $ref: '#/definitions/MultiPolygon'
        - $ref: '#/definitions/GeometryCollection'
        discriminator:
          propertyName: type
          mapping:
            Geometry: '#/definitions/Geometry'
  		      Point2D: '#/definitions/Point2D'
            Point: '#/definitions/Point'
            LineString: '#/definitions/LineString'
  		      Polygon: '#/definitions/Polygon'
            MultiPoint: '#/definitions/MultiPoint'
            LineString: '#/definitions/LineString'
  		      MultiLineString: '#/definitions/MultiLineString'
            MultiPolygon: '#/definitions/MultiPolygon'
            GeometryCollection: '#/definitions/GeometryCollection'

  FeatureCollection:
    type: object
    description:GeoJSon FeatureCollection
    required:
     - type
     - features
    externalDocs:
      url: http://geojson.org/geojson-spec.html#geometrycollection
    properties:
      type:
        type: string
        enum:
        - FeatureCollection
        description:
      features:
        type: array
        items:
          $ref: '#/definitions/Feature'