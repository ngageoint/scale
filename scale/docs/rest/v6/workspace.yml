openapi: "3.0.0"
info:
  title: Workspace Services
  version: v6
paths:
  /workspaces/:
    get:
      operationId: _rest_v6_workspace_list
      summary: Workspace List
      description: Returns a list of all workspaces
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page of the results to return. Defaults to 1.
        - in: query
          name: page_size
          schema:
            type: integer
          description: The size of the page to use for pagination of results.
            Defaults to 100, and can be anywhere from 1-1000.
        - in: query
          name: started
          schema:
            type: string
            format: date-time
          description: The start of the time range to query
        - in: query
          name: ended
          schema:
            type: string
            format: date-time
          description: End of the time range to query, defaults to the current time
        - in: query
          name: name
          schema:
            type: string
          description: Return only workspaces with a given name.
            Duplicate it to filter by multiple values.
        - in: query
          name: order
          schema:
            type: string
          description: "One or more fields to use when ordering the results.
                        Duplicate it to multi-sort, (ex: order=host_name&order=created)
                        Nested objects require a delimiter (ex: order=source_file__created)
                        Prefix fields with a dash to reverse the sort, (ex: order=-created)"
      responses:
        '200':
          description: 200 response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/workspace_list'
    post:
      operationId: _rest_v6_workspace_create
      summary: Create Workspace
      description: Creates a new Workspace with associated configuration  
      requestBody:
        required: true
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/workspace_post'
      responses:
        '201':
          description: The 201 CREATED response indicates a successful request 
            
  /workspaces/{id}/:
    get:
      operationId: _rest_v6_workspace_details
      summary: Workspace Details
      description: Returns a specific workspace and all its related model information
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: id of an existing workspace
      responses:
        '200':
          description: 200 response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/workspace_details'
    patch:
      operationId: _rest_v6_workspace_edit
      summary: Edit Workspace
      description: Edits an existing Workspace with associated configuration. 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: id of an existing workspace
      requestBody:
        required: true
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/workspace_post'
      responses:
        '204':
          description: The 204 No content response indicates a successful edit 

  /workspaces/validation/:
    post:
      operationId: _rest_v6_workspace_validate
      summary: Validate Workspace
      description: Validates a new workspace configuration without actually saving it.  
      requestBody:
        required: true
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/workspace_post'
      responses:
        '200':
          description: The 200 OK response indicates a valid workspace configuration 
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/validation'

components:
  schemas:
    workspace_list:
      title: Workspace List
      type: object
      properties:
        count:
          type: integer
          description: The total number of results that match the query parameters 
          example: 10
        next:
          type: string
          format: uri
          description: A URL to the next page of results.
          example: null
        previous:
          type: string
          format: uri
          description: A URL to the previous page of results.
          example: null
        results:
          type: array
          items:
            $ref: '#/components/schemas/workspace_base'
          description: List of workspace objects
          
    workspace_base:
      title: Workspace Base
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
        name:
          type: string
          description: The identifying name of the workspace used for queries.  
          example: raw-source
        title:
          type: string
          description: The human readable display name of the workspace.  
          example: Raw Source
        description:
          type: string
          description: A longer description of the workspace. 
          example: Raw Source Workspace
        base_url:
          type: string
          description:  The URL prefix used to access all files within the workspace.
            This field can be null if the workspace is not web-accessible.
          example: http://host.com/rs
        is_active:
          type: boolean
          description: Whether the workspace is active (false once workspace is archived).
          example: True
        created:
          type: string
          format: date-time
          description: When the associated database model was initially created.
          example: 2015-09-10T15:24:53.503Z
        archived:
          type: string
          format: date-time
          description: When the associated database model was archived.
          example: 2015-09-10T15:24:53.503Z
        last_modified:
          type: string
          format: date-time
          description: When the associated database model was last saved.
          example: 2015-09-10T15:24:53.987Z
          
    workspace_post:
      title: Workspace Post
      type: object
      required: [title, configuration]
      properties:
        name:
          type: string
          description: The identifying name of the workspace used for queries.
            Used for validation of changes to existing workspace
          example: raw-source
        title:
          type: string
          description: The human readable display name of the workspace.
            This will be used to generate the name field
          example: Raw Source
        description:
          type: string
          description: A longer description of the workspace 
          example: Raw source workspace
        base_url:
          type: string
          description:  The URL prefix used to access all files within the workspace.
            This field can be null if the workspace is not web-accessible.
          example: http://host.com/rs
        is_active:
          type: boolean
          description: Whether the workspace is active (false once workspace is archived).
          example: True
        configuration:
          $ref: '#/components/schemas/workspace_config'

    workspace_details:
      allOf:
        - $ref: '#/components/schemas/workspace_base'
        - title: Workspace Details
        - type: object
          properties: 
            configuration:
              $ref: '#/components/schemas/workspace_config'          
          
    workspace_config:
      title: Workspace Configuration
      type: object
      properties:
        version:
          type: string
          description: The version is an optional string value that defines the
            version of the configuration used. This allows updates to be made to
            the specification while maintaining backwards compatibility by allowing
            Scale to recognize an older version and convert it to the current version.
            The default value for version if it is not included is the latest version,
            which is currently 1.0. It is recommended, though not required, that you
            include the version so that future changes to the specification will still
            accept your workspace configuration.
          example: 1.0
        broker:
          oneOf:
          - $ref: '#/components/schemas/host_broker'
          - $ref: '#/components/schemas/nfs_broker'
          - $ref: '#/components/schemas/s3_broker'
      required:
      - broker
    broker:
      title: Broker
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: The type is a required string that specifies the type of the broker to use.
            The other fields that configure the broker are based upon the type of the broker in the
            type field. The valid broker types are host, nfs, and s3
          example: nfs
      required:
      - type
    host_broker:
      title: Host Broker
      allOf:
      - $ref: '#/components/schemas/broker'
      type: object
      properties: 
        host_path:
          type: string
          description: The host_path is a required string that specifies the absolute path of the
            host’s local directory that should be mounted into a job’s container in order to
            access the workspace’s files.
          example: /the/absolute/host/path
      required:
      - host_path
    nfs_broker:
      title: NFS Broker
      allOf:
      - $ref: '#/components/schemas/broker'
      type: object
      properties:
        nfs_path:
          type: string
          description: The nfs_path is a required string that specifies the remote NFS path to use
            for storing and retrieving the workspace files. It should be in the format host:/path.
          example: host:/my/path
      required:
      - nfs_path
    s3_broker:
      title: S3 Broker
      allOf:
      - $ref: '#/components/schemas/broker'
      type: object
      properties:
        bucket_name:
          type: string
          description: Specifies the globally unique
            name of a storage bucket within S3. The bucket should be created before attempting to use it here.
          example: my_bucket.domain.com
        credentials:
          $ref: '#/components/schemas/credentials'
        host_path:
          type: string
          description: The host_path is an optional string that adds S3 workspace support for
            locally mounted buckets and partial file read-only access. If a FUSE file system
            (such as s3fs or goofys) mounts the S3 bucket at the host_path location on all nodes,
            an alternative to downloading large files is available to jobs that use only portions
            of a file. The job interface must indicate partial equal to true for any input files
            to take advantage of host_path. Only read operations are performed using the mount,
            all write operations will use the S3 REST API.
          example: /my_bucket
        region_name:
          type: string
          description: The region_name is an optional string that specifies the AWS region where the
            SQS Queue is located. This is not always required, as environment variables or configuration
            files could set the default region, but it is a highly recommended setting for explicitly
            indicating the SQS region.
          example: us-east-1
      required:
      - bucket_name
      
    credentials:
      title: Credentials
      type: object
      description: The credentials is a JSON object that provides the necessary information to access
        the bucket. This attribute should be omitted when using IAM role-based security. If it is
        included for key-based security, then both sub-attributes must be included. An IAM account
        should be created and granted the appropriate permissions to the bucket before attempting to use it here.
      properties:
        access_key_id:
          type: string
          description: The access_key_id is a unique identifier for the user account in IAM that will
            be used as a proxy for read and write operations within Scale.
          example: AKIAIOSFODNN7EXAMPLE
        secret_access_key:
          type: string
          description: The secret_access_key is a generated token that the system can use to prove it
            should be able to make requests on behalf of the associated IAM account without requiring
            the actual password used by that account.
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      required:
      - access_key_id
      - secret_access_key